hydra:
  run:
    dir: .
  sweep:
    dir: .
    subdir: .
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: true
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: true
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: null
  overrides:
    hydra: []
    task:
    - selection=BGS
    - loss=multitask_cifar100
    - loader=multitask_cifar100
    - training=multitask_cifar100
    - training.trainer_name=trainers.multitask.trainer_multitask_new_interface.Trainer
    - metrics=multitask_cifar100
    - system.dtype=32
    - system.device=1
    - logs.log_name=debug
    - loss.model.lower.name=trainers.multitask.models.models.VectMTLVGG16
  job:
    name: run
    override_dirname: loader=multitask_cifar100,logs.log_name=debug,loss.model.lower.name=trainers.multitask.models.models.VectMTLVGG16,loss=multitask_cifar100,metrics=multitask_cifar100,selection=BGS,system.device=1,system.dtype=32,training.trainer_name=trainers.multitask.trainer_multitask_new_interface.Trainer,training=multitask_cifar100
    id: ???
    num: ???
    config_name: config.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.1
    cwd: /home/marbel/Documents/projects/BGS-opt
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/marbel/Documents/projects/BGS-opt/configs
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    choices:
      training: multitask_cifar100
      loss: multitask_cifar100
      loader: multitask_cifar100
      selection: BGS
      metrics: multitask_cifar100
      logs: default
      launcher: default
      cluster: OAR
      system: default
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
system:
  device: 1
  seed:
    torch: 0
    numpy: 0
  dtype: 32
  num_workers: 1
  slurm_id: ''
  dataparallel: false
  experimentalist: true
  hostname: ''
  process_id: -1
  date: ''
  time: ''
cluster:
  user: ${env:USER}
  engine: OAR
  shell:
    bin_path: /usr/bin/zsh
    config_path: ~/.zshrc
  directive: '#OAR'
  cleanup: source gpu_setVisibleDevices.sh
  cmd: oarsub -S
  launchers: default
  conda_env: ${env:CONDA_DEFAULT_ENV}
  name: thoth
launcher:
  name: default
  filename: ${launcher.name}.sh
  hours: 12
  gpumodel: null
  gpumem: null
  besteffort: false
  idempotent: false
  cmd: run.py
  nodes: 1
  cpus: 1
logs:
  log_dir: data/outputs
  log_name: debug
  log_to_file: false
  log_id: null
metrics:
  disp_freq: 10
  max_upper_iter: 1
  max_lower_iter: 1
  epoch_eval: true
  log_artefacts_freq: 200
  log_artifacts: true
  log_lower_cond: false
  freq_lower_cond: 5000
  eval_test: true
  name: multivalue
selection:
  name: BGS
  optimizer:
    optimizer:
      name: TorchOpt.adam
      b1: 0.9
      b2: 0.999
      eps: 1.0e-08
      eps_root: 1.0e-08
    scheduler:
      name: TorchOpt.schedule.linear_schedule
      init_value: 0.0003
      end_value: 0.0003
      transition_steps: 1
      transition_begin: 0
    warm_start_iter: 0
    unrolled_iter: 1
  linear_solver:
    algorithm:
      name: core.linear_solvers.SGD
      lr: 1.0e-05
      n_iter: 1
    residual_op:
      name: core.selection.NormalResidual
    stochastic: true
  correction: true
  dual_var_warm_start: true
loader:
  loader: trainers.multitask.loaders.MutiTaskLoader
  name: datasets.CIFAR100MTL
  b_size: 32
  eval_b_size: 32
  num_tasks: 20
  subset_id: 0
  data_path: data/datasets
loss:
  objective:
    lower:
      name: trainers.multitask.models.MutiTaskLoss
      weighted: true
      apply_reg: false
      num_tasks: ${loader.num_tasks}
    upper:
      name: trainers.multitask.models.MutiTaskLoss
      weighted: false
      apply_reg: true
      reg: 0.0005
      num_tasks: ${loader.num_tasks}
  model:
    lower:
      name: trainers.multitask.models.models.VectMTLVGG16
      num_tasks: ${loader.num_tasks}
      path: ''
    upper:
      name: trainers.multitask.models.Identity
      dim: ${loader.num_tasks}
      init: 0.1
      path: ''
training:
  upper_iterations: 100
  total_epoch: 200
  by_epoch: true
  trainer_name: trainers.multitask.trainer_multitask_new_interface.Trainer
  optimizer:
    upper:
      name: torch.optim.SGD
      lr: 0.1
      weight_decay: 0.0
      momentum: 0.9
    lower:
      name: torch.optim.Adam
      lr: 0.0003
  scheduler:
    lower:
      name: torch.optim.lr_scheduler.CosineAnnealingLR
      T_max: 1000
      use_scheduler: false
    upper:
      name: torch.optim.lr_scheduler.CosineAnnealingLR
      T_max: ${training.total_epoch}
      use_scheduler: true
